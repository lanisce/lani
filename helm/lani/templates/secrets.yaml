{{- if .Values.secrets.create }}
{{- if not .Values.secrets.external }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "lani.secretName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "lani.labels" . | nindent 4 }}
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  {{- range $key, $value := .Values.secrets.data }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- if eq .Values.postgresql.type "external" }}
  postgres-password: {{ .Values.postgresql.external.password | quote }}
  {{- end }}
  {{- if eq .Values.redis.type "external" }}
  redis-password: {{ .Values.redis.external.password | quote }}
  {{- end }}
{{- else }}
# External Secret configuration
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "lani.fullname" . }}-external-secret
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "lani.labels" . | nindent 4 }}
    app.kubernetes.io/component: external-secret
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: {{ .Values.secrets.externalSecretStore }}
    kind: SecretStore
  target:
    name: {{ include "lani.secretName" . }}
    creationPolicy: Owner
  data:
  - secretKey: SECRET_KEY_BASE
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: secret_key_base
  - secretKey: RAILS_MASTER_KEY
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: rails_master_key
  - secretKey: DATABASE_URL
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: database_url
  - secretKey: REDIS_URL
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: redis_url
  - secretKey: STRIPE_SECRET_KEY
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: stripe_secret_key
  - secretKey: STRIPE_PUBLISHABLE_KEY
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: stripe_publishable_key
  - secretKey: STRIPE_WEBHOOK_SECRET
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: stripe_webhook_secret
  - secretKey: MAPBOX_ACCESS_TOKEN
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: mapbox_access_token
  - secretKey: OPENPROJECT_API_KEY
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: openproject_api_key
  - secretKey: MAYBE_API_KEY
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: maybe_api_key
  - secretKey: NEXTCLOUD_USERNAME
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: nextcloud_username
  - secretKey: NEXTCLOUD_PASSWORD
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: nextcloud_password
  - secretKey: MEDUSA_API_KEY
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: medusa_api_key
  - secretKey: SMTP_PASSWORD
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: smtp_password
  - secretKey: NEW_RELIC_LICENSE_KEY
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: new_relic_license_key
  - secretKey: SENTRY_DSN
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: sentry_dsn
  - secretKey: DATADOG_API_KEY
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: datadog_api_key
  - secretKey: AWS_ACCESS_KEY_ID
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: aws_access_key_id
  - secretKey: AWS_SECRET_ACCESS_KEY
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: aws_secret_access_key
  {{- if eq .Values.postgresql.type "external" }}
  - secretKey: postgres-password
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: postgres_password
  {{- end }}
  {{- if eq .Values.redis.type "external" }}
  - secretKey: redis-password
    remoteRef:
      key: lani/{{ .Release.Namespace }}
      property: redis_password
  {{- end }}
{{- end }}
{{- end }}
