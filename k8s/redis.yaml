apiVersion: v1
kind: Service
metadata:
  name: lani-redis
  namespace: lani-production
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: lani-production
    app.kubernetes.io/component: cache
spec:
  type: ClusterIP
  ports:
    - name: redis
      port: 6379
      targetPort: redis
      protocol: TCP
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: lani-production

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lani-redis
  namespace: lani-production
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: lani-production
    app.kubernetes.io/component: cache
spec:
  serviceName: lani-redis
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: lani-production
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/instance: lani-production
        app.kubernetes.io/component: cache
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          command:
            - redis-server
            - /etc/redis/redis.conf
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lani-redis-secret
                  key: redis-password
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - redis-cli
                - --raw
                - incr
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - --raw
                - incr
                - ping
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 512Mi
              cpu: 500m
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/redis
      volumes:
        - name: config
          configMap:
            name: lani-redis-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: fast-ssd

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lani-redis-config
  namespace: lani-production
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: lani-production
    app.kubernetes.io/component: cache
data:
  redis.conf: |
    # Network and Security
    bind 0.0.0.0
    port 6379
    protected-mode yes
    requirepass ${REDIS_PASSWORD}
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # AOF (Append Only File)
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
    
    # Memory Management
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    
    # Logging
    loglevel notice
    logfile ""
    syslog-enabled no
    
    # Client Management
    timeout 300
    tcp-keepalive 300
    tcp-backlog 511
    
    # Performance
    databases 16
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    list-max-ziplist-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    hll-sparse-max-bytes 3000
    stream-node-max-bytes 4096
    stream-node-max-entries 100
    activerehashing yes
    
    # Slow Log
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # Latency Monitoring
    latency-monitor-threshold 100
    
    # Notifications
    notify-keyspace-events ""
    
    # Advanced Config
    hz 10
    dynamic-hz yes
    aof-rewrite-incremental-fsync yes
    rdb-save-incremental-fsync yes

---
# Redis Sentinel for High Availability (optional)
apiVersion: v1
kind: Service
metadata:
  name: lani-redis-sentinel
  namespace: lani-production
  labels:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/instance: lani-production
    app.kubernetes.io/component: sentinel
spec:
  type: ClusterIP
  ports:
    - name: sentinel
      port: 26379
      targetPort: sentinel
      protocol: TCP
  selector:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/instance: lani-production

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lani-redis-sentinel
  namespace: lani-production
  labels:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/instance: lani-production
    app.kubernetes.io/component: sentinel
spec:
  serviceName: lani-redis-sentinel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-sentinel
      app.kubernetes.io/instance: lani-production
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-sentinel
        app.kubernetes.io/instance: lani-production
        app.kubernetes.io/component: sentinel
    spec:
      containers:
        - name: sentinel
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          command:
            - redis-sentinel
            - /etc/redis-sentinel/sentinel.conf
          ports:
            - name: sentinel
              containerPort: 26379
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - redis-cli
                - -p
                - "26379"
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - -p
                - "26379"
                - ping
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            requests:
              memory: 64Mi
              cpu: 50m
            limits:
              memory: 128Mi
              cpu: 100m
          volumeMounts:
            - name: sentinel-config
              mountPath: /etc/redis-sentinel
      volumes:
        - name: sentinel-config
          configMap:
            name: lani-redis-sentinel-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lani-redis-sentinel-config
  namespace: lani-production
  labels:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/instance: lani-production
    app.kubernetes.io/component: sentinel
data:
  sentinel.conf: |
    port 26379
    sentinel monitor lani-master lani-redis 6379 2
    sentinel auth-pass lani-master ${REDIS_PASSWORD}
    sentinel down-after-milliseconds lani-master 5000
    sentinel parallel-syncs lani-master 1
    sentinel failover-timeout lani-master 10000
    sentinel deny-scripts-reconfig yes
    logfile ""
    loglevel notice

---
# External Redis Service (for external Redis)
apiVersion: v1
kind: Service
metadata:
  name: lani-redis-external
  namespace: lani-production
  labels:
    app.kubernetes.io/name: redis-external
    app.kubernetes.io/instance: lani-production
    app.kubernetes.io/component: cache-external
spec:
  type: ExternalName
  externalName: your-external-redis.cache.amazonaws.com
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP

---
# Redis Backup CronJob
apiVersion: batch/v1
kind: CronJob
metadata:
  name: lani-redis-backup
  namespace: lani-production
  labels:
    app.kubernetes.io/name: redis-backup
    app.kubernetes.io/instance: lani-production
    app.kubernetes.io/component: backup
spec:
  schedule: "0 3 * * *"  # Daily at 3 AM
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: redis-backup
            image: redis:7-alpine
            env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lani-redis-secret
                  key: redis-password
            command:
            - /bin/sh
            - -c
            - |
              BACKUP_FILE="/backups/redis-backup-$(date +%Y%m%d-%H%M%S).rdb"
              
              # Create Redis backup
              redis-cli -h lani-redis -a $REDIS_PASSWORD --rdb $BACKUP_FILE
              
              # Compress backup
              gzip $BACKUP_FILE
              
              # Upload to S3 (if configured)
              if [ -n "$AWS_ACCESS_KEY_ID" ]; then
                aws s3 cp ${BACKUP_FILE}.gz s3://$S3_BACKUP_BUCKET/redis/
              fi
              
              # Keep only last 7 days of backups locally
              find /backups -name "redis-backup-*.rdb.gz" -mtime +7 -delete
            volumeMounts:
            - name: backup-storage
              mountPath: /backups
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: lani-backup-pvc
